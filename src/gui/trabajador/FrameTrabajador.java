package gui.trabajador;

import conexion.ConexionBBDD;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author David López González
 */
public class FrameTrabajador extends javax.swing.JFrame
{

    private static String DNI;

    /**
     * Creates new form FrameTrabajador
     */
    public FrameTrabajador(String DNI) throws SQLException, Exception
    {
        this.DNI = DNI;
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);
        this.jtbTGastosManoObra = utils.UtilisSql.rellenarJTable("SELECT * FROM TGastosManoObra WHERE DNI = \"" + DNI + "\";", jtbTGastosManoObra);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbTGastosManoObra = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jmAnyadirGastoManoObra = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jmModificarGastoManoObra = new javax.swing.JMenuItem();
        jmEliminarGastoManoObra = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jmTrabajosRealizados = new javax.swing.JMenuItem();
        jmTrabajosRealizadosPendientesCobro = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jtbTGastosManoObra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String []
            {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtbTGastosManoObra);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
        );

        jmAnyadirGastoManoObra.setText("Trabajos");

        jMenuItem3.setText("Añadir");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jmAnyadirGastoManoObra.add(jMenuItem3);

        jmModificarGastoManoObra.setText("Modificar");
        jmModificarGastoManoObra.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jmModificarGastoManoObraActionPerformed(evt);
            }
        });
        jmAnyadirGastoManoObra.add(jmModificarGastoManoObra);

        jmEliminarGastoManoObra.setText("Eliminar");
        jmEliminarGastoManoObra.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jmEliminarGastoManoObraActionPerformed(evt);
            }
        });
        jmAnyadirGastoManoObra.add(jmEliminarGastoManoObra);

        jMenuBar1.add(jmAnyadirGastoManoObra);

        jMenu2.setText("Informe");

        jmTrabajosRealizados.setText("Trabajos realizados");
        jMenu2.add(jmTrabajosRealizados);

        jmTrabajosRealizadosPendientesCobro.setText("Trabajos realizados y pendientes de cobro");
        jmTrabajosRealizadosPendientesCobro.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jmTrabajosRealizadosPendientesCobroActionPerformed(evt);
            }
        });
        jMenu2.add(jmTrabajosRealizadosPendientesCobro);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmTrabajosRealizadosPendientesCobroActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jmTrabajosRealizadosPendientesCobroActionPerformed
    {//GEN-HEADEREND:event_jmTrabajosRealizadosPendientesCobroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jmTrabajosRealizadosPendientesCobroActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItem3ActionPerformed
    {//GEN-HEADEREND:event_jMenuItem3ActionPerformed
        NuevoGastoManoObra internal = new NuevoGastoManoObra(jtbTGastosManoObra, DNI);
        internal.setVisible(true);
        utils.UtilsFrame.centrar(internal, 300, 600);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jmModificarGastoManoObraActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jmModificarGastoManoObraActionPerformed
    {//GEN-HEADEREND:event_jmModificarGastoManoObraActionPerformed
        String pagado = (String) jtbTGastosManoObra.getValueAt(jtbTGastosManoObra.getSelectedRow(), 11);
        if (pagado.equals("No pagado"))
        {
            try
            {
                int id = (int) jtbTGastosManoObra.getValueAt(jtbTGastosManoObra.getSelectedRow(), 0);
                NuevoGastoManoObra internal = new NuevoGastoManoObra(jtbTGastosManoObra, id, DNI);
                internal.setVisible(true);
                utils.UtilsFrame.centrar(internal, 300, 600);

            } catch (Exception ex)
            {
                JOptionPane.showInternalMessageDialog(this.getContentPane(), "Tiene que selecionar la fila a modificar");
            }
        }
    }//GEN-LAST:event_jmModificarGastoManoObraActionPerformed

    private void jmEliminarGastoManoObraActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jmEliminarGastoManoObraActionPerformed
    {//GEN-HEADEREND:event_jmEliminarGastoManoObraActionPerformed
        String pagado = (String) jtbTGastosManoObra.getValueAt(jtbTGastosManoObra.getSelectedRow(), 11);
        if (pagado.equals("No pagado"))
        {
            try
            {
                int id = (int) jtbTGastosManoObra.getValueAt(jtbTGastosManoObra.getSelectedRow(), 0);
                ConexionBBDD c = new ConexionBBDD();
                c.hacerBorrado("DELETE FROM TGastosManoObra WHERE Id = " + id + ";");
                c.cerrarConexion();
                this.jtbTGastosManoObra = utils.UtilisSql.rellenarJTable("SELECT * FROM TGastosManoObra WHERE DNI = \"" + DNI + "\";", jtbTGastosManoObra);
            } catch (ClassNotFoundException ex)
            {
                Logger.getLogger(FrameTrabajador.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex)
            {
                Logger.getLogger(FrameTrabajador.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jmEliminarGastoManoObraActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(FrameTrabajador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(FrameTrabajador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(FrameTrabajador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(FrameTrabajador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                try
                {
                    new FrameTrabajador(DNI).setVisible(true);
                } catch (Exception ex)
                {
                    Logger.getLogger(FrameTrabajador.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu jmAnyadirGastoManoObra;
    private javax.swing.JMenuItem jmEliminarGastoManoObra;
    private javax.swing.JMenuItem jmModificarGastoManoObra;
    private javax.swing.JMenuItem jmTrabajosRealizados;
    private javax.swing.JMenuItem jmTrabajosRealizadosPendientesCobro;
    private javax.swing.JTable jtbTGastosManoObra;
    // End of variables declaration//GEN-END:variables
}
